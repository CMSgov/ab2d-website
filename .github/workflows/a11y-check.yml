name: "Accessibility Check"

on:
  workflow_call

jobs:
  a11y-check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          cache: 'npm'
          node-version-file: '.nvmrc'
          # node-version: 20 ## Using a .nvmrc file to stay in sync with the repo

      # - name: Configure AWS Credentials
      #   uses: aws-actions/configure-aws-credentials@v4
      #   with:
      #     aws-region: ${{ vars.AWS_REGION }}
      #     role-to-assume: arn:aws:iam::${{ secrets.NON_PROD_ACCOUNT }}:role/delegatedadmin/developer/ab2d-dev-github-actions

      # - name: Fetch AWS Parameters
      #   uses: cmsgov/ab2d-bcda-dpc-platform/actions/aws-params-env-action@main
      #   with:
      #     params: |
      #       DOMAIN_NAME=/ab2d/dev/web/nonsensitive/domain-name

      - name: Set Deployment Path
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "DEPLOY_PATH=${{ github.event.number }}" >> $GITHUB_ENV
          else
            echo "DEPLOY_PATH=${{ github.ref_name }}" >> $GITHUB_ENV
          fi

      - name: Run pa11y
        run: npx pa11y-ci --config pa11yci.ci.json --sitemap https://dveopzwo661ye.cloudfront.net/${{ env.DEPLOY_PATH }}/sitemap.xml --sitemap-exclude "/*.pdf"  --sitemap-find https://ab2d.cms.gov/ --sitemap-replace https://dveopzwo661ye.cloudfront.net/ --json > pa11y-results.json || echo "EXIT_CODE=$?" >> $GITHUB_ENV

      - name: Save Report to Action Summary
        uses: actions/github-script@v7
        if: env.EXIT_CODE == 0 || env.EXIT_CODE == 2
        with:
          script: |
            const fs = require('fs');

            const results = "pa11y-results.json"
            const data = JSON.parse(fs.readFileSync(results, "utf-8"))

            let body = "## Accessibility Report \n\n";
            body += "| Status | URL | Errors |\n";
            body += "| ------ | --- | ------ |\n";

            Object.entries(data.results).forEach(([url, issues]) => {
              body += `${issues.length > 0 ? '❌' : '✅' } | ${url} | ${issues.length} errors |\n`;
            });

            core.summary.addRaw(body).write();
